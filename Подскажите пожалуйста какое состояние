from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
import random

ADMIN_ID = 396217206  # –í–∞—à ID

bible_quotes = [
    "¬´–ì–æ—Å–ø–æ–¥—å ‚Äî –º–æ–π –ø–∞—Å—Ç—ã—Ä—å; —è –Ω–∏ –≤ —á—ë–º –Ω–µ –±—É–¥—É –Ω—É–∂–¥–∞—Ç—å—Å—è.¬ª (–ü—Å–∞–ª–æ–º 22:1)",
    "¬´–ë–ª–∞–∂–µ–Ω–Ω—ã —á–∏—Å—Ç—ã–µ —Å–µ—Ä–¥—Ü–µ–º, –∏–±–æ –æ–Ω–∏ –ë–æ–≥–∞ —É–≤–∏–¥—è—Ç.¬ª (–ú–∞—Ç—Ñ–µ–π 5:8)",
    "¬´–ù–µ –±–æ–π—Å—è, –∏–±–æ –Ø —Å —Ç–æ–±–æ–π.¬ª (–ò—Å–∞–∏—è 41:10)",
    "¬´–Ø ‚Äî –ø—É—Ç—å, –∏ –∏—Å—Ç–∏–Ω–∞, –∏ –∂–∏–∑–Ω—å.¬ª (–ò–æ–∞–Ω–Ω 14:6)"
]

auto_responses = {
    "–∫–∞–∫ –¥–µ–ª–∞?": "–°–ø–∞—Å–∏–±–æ, –≤—Å—ë —Ö–æ—Ä–æ—à–æ! üôè",
    "–ø—Ä–∏–≤–µ—Ç": "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? üôå",
    "–ø–æ–∫–∞": "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –î–∞ –±–ª–∞–≥–æ—Å–ª–æ–≤–∏—Ç –≤–∞—Å –ë–æ–≥! ‚úã"
}

keyboard = [
    ["üìñ –ß—Ç–µ–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å", "üïä –°–ª–æ–≤–æ –¥–Ω—è"],
    ["üìö –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ö—Ä–∏—Å—Ç–∏–∞–Ω–∏–Ω–∞", "‚ùì –ß–∞—Å—Ç—ã–π –≤–æ–ø—Ä–æ—Å"],
    ["üòî –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏‚Ä¶", "üßû‚Äç‚ôÇÔ∏è –í–æ–ø—Ä–æ—Å —Å–≤—è—â–µ–Ω–Ω–∏–∫—É"],
    ["üìÖ –¶–µ—Ä–∫–æ–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å"]
]
reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

PRAYER_FILE = "prayers.txt"

# /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=reply_markup)

# –ß—Ç–µ–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å
async def reading(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞, –ø–æ–∑–∂–µ –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —á—Ç–µ–Ω–∏–µ –ï–≤–∞–Ω–≥–µ–ª–∏—è –¥–Ω—è
    text = "–ï–≤–∞–Ω–≥–µ–ª–∏–µ –¥–Ω—è: ¬´–í –Ω–∞—á–∞–ª–µ –±—ã–ª–æ –°–ª–æ–≤–æ...¬ª"
    await update.message.reply_text(text)

# –°–ª–æ–≤–æ –¥–Ω—è
async def quote(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(random.choice(bible_quotes))

# –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ö—Ä–∏—Å—Ç–∏–∞–Ω–∏–Ω–∞ (—É—Ç—Ä–µ–Ω–Ω–µ–µ –ø—Ä–∞–≤–∏–ª–æ)
async def prayer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞, –Ω–∞–ø–æ–ª–Ω–∏—Ç—å –ø–æ–∑–∂–µ
    text = "–£—Ç—Ä–µ–Ω–Ω–µ–µ –º–æ–ª–∏—Ç–≤–µ–Ω–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ: –º–æ–ª–∏—Ç–≤–∞ –æ –ø—Ä–æ—â–µ–Ω–∏–∏..."
    await update.message.reply_text(text)

# –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã
async def question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞
    text = "–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n1. –ö–∞–∫ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –∏—Å–ø–æ–≤–µ–¥–∏?\n2. –ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–∏—á–∞—Å—Ç–∏–µ?"
    await update.message.reply_text(text)

# –°–æ–≤–µ—Ç—ã –≤ –¥—É—Ö–æ–≤–Ω—ã—Ö —Å–æ—Å—Ç–æ—è–Ω–∏—è—Ö
async def state(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = "–ï—Å–ª–∏ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —É–Ω—ã–Ω–∏–µ, –ø–æ–º–æ–ª–∏—Ç–µ—Å—å –∏ –ø–æ—á–∏—Ç–∞–π—Ç–µ –ü—Å–∞–ª–æ–º 50."
    await update.message.reply_text(text)

# –í–æ–ø—Ä–æ—Å —Å–≤—è—â–µ–Ω–Ω–∏–∫—É
async def ask(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["awaiting_question"] = True
    await update.message.reply_text("‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å —Å–≤—è—â–µ–Ω–Ω–∏–∫—É:")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ —Å–≤—è—â–µ–Ω–Ω–∏–∫—É
async def save_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    question = update.message.text
    with open("questions.txt", "a", encoding="utf-8") as f:
        f.write(f"{update.effective_user.first_name}: {question}\n")
    await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à –≤–æ–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∏ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω.")

# –¶–µ—Ä–∫–æ–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å (–ø—Ä–∏–º–µ—Ä)
async def calendar(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –ü—Ä–∏–º–µ—Ä —Å—Ç–∞—Ç–∏—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–∞—Ä—Å–µ—Ä –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏
    text = "–°–µ–≥–æ–¥–Ω—è 30 –º–∞—è. –ü–æ—Å—Ç: —Å—Ç—Ä–æ–≥–∏–π –ø–æ—Å—Ç."
    await update.message.reply_text(text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()

    if context.user_data.get("awaiting_question"):
        context.user_data["awaiting_question"] = False
        await save_question(update, context)
        return

    if text == "üìñ —á—Ç–µ–Ω–∏–µ –Ω–∞ –¥–µ–Ω—å".lower():
        await reading(update, context)
    elif text == "üïä —Å–ª–æ–≤–æ –¥–Ω—è".lower():
        await quote(update, context)
    elif text == "üìö –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ö—Ä–∏—Å—Ç–∏–∞–Ω–∏–Ω–∞".lower():
        await prayer(update, context)
    elif text == "‚ùì —á–∞—Å—Ç—ã–π –≤–æ–ø—Ä–æ—Å".lower():
        await question(update, context)
    elif text == "üòî —á—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏‚Ä¶".lower():
        await state(update, context)
    elif text == "üßû‚Äç‚ôÇÔ∏è –≤–æ–ø—Ä–æ—Å —Å–≤—è—â–µ–Ω–Ω–∏–∫—É".lower():
        await ask(update, context)
    elif text == "üìÖ —Ü–µ—Ä–∫–æ–≤–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å".lower():
        await calendar(update, context)
    elif text in auto_responses:
        await update.message.reply_text(auto_responses[text])
    else:
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.", reply_markup=reply_markup)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
app = ApplicationBuilder().token("7820850246:AAGC1mrwvF-1R9tEOf0RKCoE9prP5xXp180").build()

app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

app.run_polling()
